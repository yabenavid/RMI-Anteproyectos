/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cliente.presentacion;

import SGestionAnteproyectos.dto.Usuario;
import SGestionAnteproyectos.sop_rmi.GestionAnteproyectosInt;
import SGestionAnteproyectos.sop_rmi.GestionUsuariosInt;
import SGestionAnteproyectos.dto.FormatoTIA;
import cliente.utilidades.UtilidadesGenerales;
import java.rmi.RemoteException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author YENNYFER
 */
public class AsignacionEvaluadores extends javax.swing.JInternalFrame {

    /**
     * Creates new form ListarFormatosTID
     */
    private GestionAnteproyectosInt objGestionAnteproyectosInt;
    private GestionUsuariosInt objGestionUsuariosInt;
    private  ArrayList<Usuario> usuarios;
    private ArrayList<FormatoTIA> formatoTIAs;
    private UtilidadesGenerales utilidadesGenerales;
  
    
    public AsignacionEvaluadores(GestionAnteproyectosInt objGestionAnteproyectosInt, GestionUsuariosInt objGestionUsuariosInt) throws RemoteException {
        this.objGestionAnteproyectosInt = objGestionAnteproyectosInt;
        this.objGestionUsuariosInt = objGestionUsuariosInt;
        this.utilidadesGenerales = new UtilidadesGenerales();
        
        initComponents();
        
        inicializarTablaAnteproyectos();
        inicializarTablaEvaluadores();
        
        llenarTablaAnteproyectos();
        llenarTablaEvaluadores();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblEvaluadores = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblAnteproyectos = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        txtIndentificacion = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtCodigoAnteproyecto = new javax.swing.JTextField();
        btnGuadar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();

        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/1485476036-artboard-1_78544.png"))); // NOI18N

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setText("Lista de todos los anteproyectos sin evaluadores");

        tblEvaluadores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblEvaluadores);

        jLabel2.setText("Lista de Evaluadores");

        tblAnteproyectos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tblAnteproyectos);

        jLabel3.setText("Identificación del Evaluador:");

        jLabel4.setText("Código del Anteproyecto a asignar:");

        btnGuadar.setText("Guardar");
        btnGuadar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuadarActionPerformed(evt);
            }
        });

        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(132, 132, 132))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel3)
                        .addGap(48, 48, 48)
                        .addComponent(txtIndentificacion, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 523, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(243, 243, 243)
                        .addComponent(jLabel2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnLimpiar)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(txtCodigoAnteproyecto, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnGuadar)))))
                .addContainerGap(14, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 527, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(106, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 137, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtIndentificacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtCodigoAnteproyecto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGuadar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnLimpiar)
                .addGap(16, 16, 16))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(59, 59, 59)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(295, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuadarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuadarActionPerformed
        if(!"".equals(txtIndentificacion.getText())){
            if(!"".equals(txtCodigoAnteproyecto.getText())){           
                if(validarCodigoAnteproyecto()){
                    if(validarIdentificacionEvaluador()){
                        try {
                            if(objGestionAnteproyectosInt.asignarEvaluador(Integer.parseInt(txtCodigoAnteproyecto.getText()),Integer.parseInt(txtIndentificacion.getText()))){
                                llenarTablaAnteproyectos();
                                JOptionPane.showMessageDialog(null, "Evaluador asignado exitosamente", "Información", JOptionPane.INFORMATION_MESSAGE);
                                btnLimpiar.doClick();

                            }else{
                               JOptionPane.showMessageDialog(null, "El anteproyecto con código: "+ txtCodigoAnteproyecto.getText() +"  ya cuenta con los dos evaludores", "Información", JOptionPane.INFORMATION_MESSAGE); 
                            }} catch (RemoteException ex) {
                            Logger.getLogger(AsignacionEvaluadores.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        
                    }else{
                        JOptionPane.showMessageDialog(null, "La identificación del Evaluador ingresada  no está Regitrada", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                    
                }else{
                    JOptionPane.showMessageDialog(null, "El código del Anteproyecto ingresado no está Regitrado", "Error", JOptionPane.ERROR_MESSAGE);
                }
                
            }else{
               JOptionPane.showMessageDialog(null, "Por favor Ingrese un valor para código del Anteproyecto", "Advertencia", JOptionPane.WARNING_MESSAGE);
            }  
            
        }else{
            JOptionPane.showMessageDialog(null, "Por favor Ingrese un valor para Identificación del Evaluador", "Advertencia", JOptionPane.WARNING_MESSAGE);      
        }
    }//GEN-LAST:event_btnGuadarActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        txtCodigoAnteproyecto.setText("");
        txtIndentificacion.setText("");
    }//GEN-LAST:event_btnLimpiarActionPerformed
    private boolean validarCodigoAnteproyecto(){
        for(int i =0; i<formatoTIAs.size();i++){
            if(formatoTIAs.get(i).getCodigoAnteproyecto() == Integer.parseInt(txtCodigoAnteproyecto.getText())){
                return  true;
            }         
        }
         return false;
    }
    private boolean validarIdentificacionEvaluador(){
        for(int i =0; i<usuarios.size();i++){
            if(usuarios.get(i).getId()== Integer.parseInt(txtIndentificacion.getText())){
                return  true;
            }         
        }
         return false;
    }
    
   private void inicializarTablaAnteproyectos(){
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("Codigo ");
        model.addColumn("Programa");
        model.addColumn("Titulo");
        model.addColumn("Evaluador 1");  
        model.addColumn("Evaluador 2"); 
        this.tblAnteproyectos.setModel(model);
    }
   private void inicializarTablaEvaluadores(){
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("Identificación");
        model.addColumn("Nombre");
        model.addColumn("Departamento");      
        this.tblEvaluadores.setModel(model);
    }
   
   private void llenarTablaAnteproyectos() throws RemoteException{
        
    DefaultTableModel model = (DefaultTableModel)this.tblAnteproyectos.getModel();
    utilidadesGenerales.limpiarTabla(tblAnteproyectos);
    this.formatoTIAs = objGestionAnteproyectosInt.consultarFormatosTIA();
    
        for (int i = 0; i <formatoTIAs.size(); i++) {
            if(formatoTIAs.get(i).getIdentificacionEvaluador1() != 1 || formatoTIAs.get(i).getIdentificacionEvaluador2() !=1 ){
            FormatoTIA objFormatoTIA = formatoTIAs.get(i);
            String[] fila = {String.valueOf(objFormatoTIA.getCodigoAnteproyecto()),objFormatoTIA.getTituloAnteproyecto(),objFormatoTIA.getNombrePrograma(),String.valueOf(objFormatoTIA.getIdentificacionEvaluador1()), objFormatoTIA.getIdentificacionEvaluador2() + ""};
            model.addRow(fila);
            }
        }
    }
    private void llenarTablaEvaluadores() throws RemoteException{
        
    DefaultTableModel model = (DefaultTableModel)this.tblEvaluadores.getModel();
    utilidadesGenerales.limpiarTabla(tblEvaluadores);
    //usuarios.clear();
    this.usuarios = objGestionUsuariosInt.listarUsuarios();
    
        for (int i = 0; i <usuarios.size(); i++) {
            Usuario usuario = usuarios.get(i);
            if(usuario.getRol().toString().equals("EVALUADOR")){           
            String[] fila = {String.valueOf(usuario.getId()),usuario.getNombre(),usuario.getDepartamento()+ ""};
            model.addRow(fila);
            }
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGuadar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblAnteproyectos;
    private javax.swing.JTable tblEvaluadores;
    private javax.swing.JTextField txtCodigoAnteproyecto;
    private javax.swing.JTextField txtIndentificacion;
    // End of variables declaration//GEN-END:variables
}
