/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cliente.presentacion;

import SGestionAnteproyectos.dto.FormatoTIA;
import SGestionAnteproyectos.sop_rmi.GestionAnteproyectosInt;
import SGestionAnteproyectos.dto.FormatoTIC;
import java.rmi.RemoteException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author YENNYFER
 */
public class RegistrarFormatoTIC extends javax.swing.JInternalFrame {

    /**
     * Creates new form RegistrarFormatoTIC
     */
    private GestionAnteproyectosInt objGestionAnteproyectosInt;
    private ArrayList<Integer> codsAnteproyectosRemitidos;
    private int idJefeDepto;
    
    public RegistrarFormatoTIC() {
        initComponents();
       ((javax.swing.plaf.basic.BasicInternalFrameUI)this.getUI()).setNorthPane(null);
    }
     public RegistrarFormatoTIC(GestionAnteproyectosInt objGestionAnteproyectosInt, int idJefeDepto)throws RemoteException {
        this.objGestionAnteproyectosInt= objGestionAnteproyectosInt;
        this.idJefeDepto = idJefeDepto;
        initComponents();
        codsAnteproyectosRemitidos = new ArrayList<>();
        txtConcepto1.setEditable(false);
        txtConcepto2.setEditable(false);
        consultarCodigosAnteproyectos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btnLimpiar = new javax.swing.JButton();
        bntGuardar = new javax.swing.JButton();
        txtConcepto1 = new javax.swing.JTextField();
        txtConcepto2 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtObservaciones = new javax.swing.JTextArea();
        cbxCodigoAnteproyectos = new javax.swing.JComboBox<>();
        cbxEstructura = new javax.swing.JComboBox<>();
        jSpinnerConcepto = new javax.swing.JSpinner();

        setTitle("Registro");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/businessregistration_signpen_negocio_inscripcio_2358.png"))); // NOI18N
        setPreferredSize(new java.awt.Dimension(560, 467));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel1.setText("CÃ³digo del Anteproyecto:");

        jLabel2.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel2.setText("Concepto 1:");

        jLabel3.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel3.setText("Concepto 2:");

        jLabel4.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel4.setText("Estructura:");

        jLabel5.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel5.setText("Concepto del depto:");

        jLabel6.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel6.setText("Observaciones:");

        btnLimpiar.setBackground(new java.awt.Color(255, 255, 255));
        btnLimpiar.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        btnLimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cliente/presentacion/imgs/icons8_ccleaner_32px.png"))); // NOI18N
        btnLimpiar.setText("Limpiar");
        btnLimpiar.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        bntGuardar.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        bntGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cliente/presentacion/imgs/guardar2.png"))); // NOI18N
        bntGuardar.setText("Guardar");
        bntGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntGuardarActionPerformed(evt);
            }
        });

        txtConcepto1.setPreferredSize(new java.awt.Dimension(29, 21));

        txtConcepto2.setPreferredSize(new java.awt.Dimension(29, 21));

        jLabel7.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel7.setText("Registrar Formatos TI-C");

        txtObservaciones.setColumns(20);
        txtObservaciones.setRows(5);
        jScrollPane1.setViewportView(txtObservaciones);

        cbxCodigoAnteproyectos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxCodigoAnteproyectosActionPerformed(evt);
            }
        });

        cbxEstructura.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "CORRECTO", "INCORRECTO" }));

        jSpinnerConcepto.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jSpinnerConcepto.setModel(new javax.swing.SpinnerNumberModel(0, 0, 1, 1));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(169, 169, 169)
                .addComponent(jLabel7)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(bntGuardar))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane1)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(35, 35, 35)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtConcepto1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtConcepto2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbxCodigoAnteproyectos, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbxEstructura, 0, 233, Short.MAX_VALUE)
                            .addComponent(jSpinnerConcepto))))
                .addGap(44, 44, 44))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxCodigoAnteproyectos, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtConcepto1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtConcepto2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cbxEstructura, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 22, Short.MAX_VALUE)
                        .addComponent(jLabel5))
                    .addComponent(jSpinnerConcepto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addGap(8, 8, 8)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bntGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        jSpinnerConcepto.setValue(0);
        txtObservaciones.setText("");
    }//GEN-LAST:event_btnLimpiarActionPerformed
 private boolean validarAnteproyecto(int idAnteproyecto) {
        ArrayList<FormatoTIC> objFormatoTICs;
        try {
            objFormatoTICs = objGestionAnteproyectosInt.consultarFormatosTIC();
            for (int i = 0; i < objFormatoTICs.size(); i++) {
                if (objFormatoTICs.get(i).getCodigoAnteproyecto() == idAnteproyecto) {
                        return  true;
                }
            }

        } catch (Exception ex) {
            Logger.getLogger(RegistrarFormatoTIA.class.getName()).log(Level.SEVERE, null, ex);
        }
        return  false;
        
    }
    private void bntGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntGuardarActionPerformed
          
        if (cbxCodigoAnteproyectos.getSelectedIndex() == -1) {
            JOptionPane.showMessageDialog(null, "Por favor seleccione un Codigo de anteproyecto");
        } else {
            if (cbxEstructura.getSelectedIndex()!= -1) {
                if (!jSpinnerConcepto.getValue().equals("")) {
                    if(!txtObservaciones.getText().isEmpty()){
                        FormatoTIC objFormatosTIC = new FormatoTIC(); 
                        objFormatosTIC.setCodigoAnteproyecto(Integer.parseInt(cbxCodigoAnteproyectos.getSelectedItem().toString()));
                                             
                        if("CORRECTO".equals(cbxEstructura.getSelectedItem().toString())){
                            objFormatosTIC.setEstructura(true);
                        }else{
                            objFormatosTIC.setEstructura(false);
                        }
                        objFormatosTIC.setConceptoDepto(Integer.parseInt(jSpinnerConcepto.getValue().toString()));
                        objFormatosTIC.setObservaciones(txtObservaciones.getText());
                        objFormatosTIC.setIdJefeDeto(idJefeDepto);
                        try {
                            if (!validarAnteproyecto(Integer.parseInt(cbxCodigoAnteproyectos.getSelectedItem().toString()))) {
                                if (validarConceptos()) {
                                    if (objGestionAnteproyectosInt.remitirFormatoTIC(objFormatosTIC)) {
                                        JOptionPane.showMessageDialog(null, "Formato TIC registrado con Ã©xito.", "Informacion", JOptionPane.INFORMATION_MESSAGE);
                                        btnLimpiar.doClick();
                                        
                                    } else {
                                        JOptionPane.showMessageDialog(null, "No existe un anteproyecto con cÃ³digo 0.", "Error", JOptionPane.ERROR_MESSAGE);
                                    }
                                    codsAnteproyectosRemitidos.add(objFormatosTIC.getCodigoAnteproyecto());
                                }
                            }else{
                                JOptionPane.showMessageDialog(null, "Ya se ha registrado un Formato TIC para el cÃ³digo de anteproyecto seleccionado", "Error", JOptionPane.ERROR_MESSAGE);                                    
                                btnLimpiar.doClick();
                            }
                            
                        } catch (RemoteException ex) {
                            Logger.getLogger(RegistrarFormatoTIA.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }else{
                        JOptionPane.showMessageDialog(null, "Por favor Ingrese un valor para Observaciones", "Advertencia", JOptionPane.WARNING_MESSAGE);
                    }
                    
                }else{
                    JOptionPane.showMessageDialog(null, "Por favor Ingrese un valor para Concepto del Departamento", "Advertencia", JOptionPane.WARNING_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Por favor Seleccione un valor para Estructura", "Advertencia", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_bntGuardarActionPerformed

    private void cbxCodigoAnteproyectosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxCodigoAnteproyectosActionPerformed
          ArrayList<Integer> conceptos;
        try {
            llenarconceptos(conceptos = objGestionAnteproyectosInt.consultarConceptos(Integer.parseInt(cbxCodigoAnteproyectos.getSelectedItem().toString())));
        } catch (RemoteException ex) {
            Logger.getLogger(RegistrarFormatoTIC.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_cbxCodigoAnteproyectosActionPerformed
    
    private void llenarconceptos(ArrayList<Integer> conceptos){
        if (!conceptos.isEmpty()) {
            if (conceptos.size() > 1) {
                txtConcepto1.setText(String.valueOf(conceptos.get(0)));
                txtConcepto2.setText(String.valueOf(conceptos.get(1)));
            } else {
                txtConcepto1.setText(String.valueOf(conceptos.get(0)));
                txtConcepto2.setText("");
            }
        }else{
            txtConcepto1.setText("");
            txtConcepto2.setText("");
        }
    }
    
    private boolean  validarConceptos(){
        if("1".equals(txtConcepto1.getText()) && "1".equals(txtConcepto2.getText())){
            return true;
        }
        return false;
    }
    
    private void consultarCodigosAnteproyectos() throws RemoteException {

        ArrayList<FormatoTIA> objFormatos = new ArrayList<>();
        ArrayList<Integer> conceptos = new ArrayList<>();
        objFormatos = objGestionAnteproyectosInt.consultarFormatosTIA();

        if (!objFormatos.isEmpty()) {

            for (int i = 0; i < objFormatos.size(); i++) {
                if (!codsAnteproyectosRemitidos.contains(objFormatos.get(i).getCodigoAnteproyecto())) {
                    conceptos = objGestionAnteproyectosInt.consultarConceptos(objFormatos.get(i).getCodigoAnteproyecto());
                    if (!conceptos.isEmpty()) {
                        if (conceptos.get(0) == 1 && conceptos.get(1) == 1) {
                            cbxCodigoAnteproyectos.addItem(String.valueOf(objFormatos.get(i).getCodigoAnteproyecto()));
                        }
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "No hay Anteproyectos aprovados por evaluadores", "Error", JOptionPane.ERROR_MESSAGE);
            this.dispose();
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bntGuardar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JComboBox<String> cbxCodigoAnteproyectos;
    private javax.swing.JComboBox<String> cbxEstructura;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jSpinnerConcepto;
    private javax.swing.JTextField txtConcepto1;
    private javax.swing.JTextField txtConcepto2;
    private javax.swing.JTextArea txtObservaciones;
    // End of variables declaration//GEN-END:variables
}
